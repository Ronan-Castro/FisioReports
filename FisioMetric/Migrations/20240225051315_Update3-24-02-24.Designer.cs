// <auto-generated />
using System;
using FisioMetric.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FisioMetric.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20240225051315_Update3-24-02-24")]
    partial class Update3240224
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("FisioMetric.Models.Entidades.Avaliacao", b =>
                {
                    b.Property<int>("RelatorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AtivFisica")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CabecaCervical")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Cardiaca")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Cardiopatia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Cirurgias")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Coluna")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Covid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAtendimento")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Dermatologica")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Diabete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DiagClinico")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiagFisioterapeutico")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DoencasHereditarias")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Endocrina")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Equilibrio")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstabilidadeEscapular")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Etilismo")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FroxidaoLigamentar")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("GastroIntestinal")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Gestacao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Hipertensao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IngereAgua")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Intestino")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Joelhos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Medicacao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Metabolica")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MobilidadeColuna")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Neoplasias")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Neurologicas")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjetivoPessoal")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjetivoTerapeutico")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObsHabitos")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObservacaoDoenca")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ombros")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PacienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PadraoMovimento")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pelve")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Pilates")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QueixaPrincipal")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Respiratorias")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Tabagismo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TratamentoAnterior")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Vasculares")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Visual")
                        .HasColumnType("INTEGER");

                    b.HasKey("RelatorioId");

                    b.ToTable("avaliacoes", (string)null);
                });

            modelBuilder.Entity("FisioMetric.Models.Entidades.Evolucao", b =>
                {
                    b.Property<int>("IdEvolucao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Anotacoes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Aparelho")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClienteChegou")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClienteSaiu")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAtividade")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fisioterapeuta")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdEvolucao");

                    b.ToTable("evolucoes", (string)null);
                });

            modelBuilder.Entity("FisioMetric.Models.Entidades.Paciente", b =>
                {
                    b.Property<int>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataUltimaAtividade")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataUltimaAvaliacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genero")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Profissao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("PacienteId");

                    b.ToTable("pacientes", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
